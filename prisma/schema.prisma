// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Bybit {
  id            BigInt   @id @default(autoincrement())
  address       String
  amount        Float?
  transactionId Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Account {
  id             BigInt    @id @default(autoincrement())
  twitterId      String    @unique
  username       String    @unique
  followerCount  Int?
  followingCount Int?
  verified       Boolean?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  tweets         Tweet[]   @relation("AccountTweets")
  likes          Like[] // Relation field for likes
  retweets       Retweet[] // Relation field for retweets
  comments       Comment[] // Relation field for comments
}

model Tweet {
  id        BigInt    @id @default(autoincrement())
  tweetId   String    @unique
  text      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  author    Account   @relation(name: "AccountTweets", fields: [authorId], references: [twitterId])
  authorId  String
  likes     Like[] // Relation field for likes
  retweets  Retweet[] // Relation field for retweets
  comments  Comment[] // Relation field for comments
}

model Like {
  id        BigInt   @id @default(autoincrement())
  accountId String // Foreign key to Account
  tweetId   String // Foreign key to Tweet
  likedAt   DateTime @default(now()) // Timestamp when the like was created
  account   Account  @relation(fields: [accountId], references: [twitterId])
  tweet     Tweet    @relation(fields: [tweetId], references: [tweetId])

  @@unique([accountId, tweetId]) // Ensure unique combination of accountId and tweetId
}

model Retweet {
  id          BigInt   @id @default(autoincrement())
  accountId   String // Foreign key to Account
  tweetId     String // Foreign key to Tweet
  text        String
  retweetedAt DateTime @default(now()) // Timestamp when the retweet was made
  account     Account  @relation(fields: [accountId], references: [twitterId])
  tweet       Tweet    @relation(fields: [tweetId], references: [tweetId])

  @@unique([accountId, tweetId]) // Ensure unique combination of accountId and tweetId
}

model Comment {
  id        BigInt   @id @default(autoincrement())
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    Account  @relation(fields: [authorId], references: [twitterId])
  authorId  String
  tweet     Tweet    @relation(fields: [tweetId], references: [tweetId])
  tweetId   String
}
